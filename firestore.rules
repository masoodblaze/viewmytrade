
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if isAdminUser();
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null &&
                   request.auth.uid == userId &&
                   !('role' in request.resource.data);
    }

    match /session/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdminUser();
    }

    match /calls/{callId} {
      allow read: if request.auth != null;
      allow write: if isAdminUser();
      allow update: if request.auth != null;

      match /candidates/{candidateId} {
        allow read: if request.auth != null;
        allow write: if isAdminUser();
      }
    }

    function isAdminUser() {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
  }
}
